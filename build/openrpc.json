{
  "openrpc": "1.2.4",
  "info": {
    "title": "Ethereum JSON-RPC Specification",
    "description": "A specification of the standard interface for Ethreum clients.",
    "license": {
      "name": "CC0-1.0",
      "url": "https://creativecommons.org/publicdomain/zero/1.0/legalcode"
    },
    "version": "0.0.0"
  },
  "methods": [
    {
      "name": "eth_accounts",
      "summary": "Returns a list of addresses owned by this client",
      "params": [],
      "result": {
        "name": "array of addresses",
        "schema": {
          "title": "addresses",
          "type": "array",
          "items": {
            "title": "address",
            "type": "string",
            "pattern": "^0x[0-9a-f]{40}$"
          }
        }
      }
    },
    {
      "name": "eth_blockNumber",
      "summary": "Returns the number of the most recent block seen by this client",
      "params": [],
      "result": {
        "name": "block number",
        "summary": "The number of blocks in the best chain of the trie",
        "schema": {
          "title": "block number",
          "type": "string",
          "pattern": "^0x[0-9a-f]{64}$"
        }
      }
    },
    {
      "name": "eth_call",
      "summary": "Executes a new message call immediately without creating a transaction on the block chain.",
      "params": [
        {
          "name": "Transaction",
          "required": true,
          "schema": {
            "title": "Transaction object with sender",
            "type": "object",
            "allOf": [
              {
                "required": ["from"],
                "properties": {
                  "from": {
                    "title": "from",
                    "description": "The transaction sender's address",
                    "type": "string",
                    "pattern": "^0x[0-9a-f]{40}$"
                  }
                }
              },
              {
                "title": "transaction object",
                "type": "object",
                "allOf": [
                  {
                    "required": ["nonce", "gas", "value", "input"],
                    "properties": {
                      "type": {
                        "title": "type",
                        "type": "string",
                        "pattern": "^0x([a-fA-F0-9]?){1,2}$"
                      },
                      "nonce": {
                        "title": "nonce",
                        "summary": "A 32-byte value which, combined with the mix-hash, proves that a sufficient amount of computation has been carried out on this block",
                        "type": "string",
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "to": {
                        "title": "to",
                        "type": "string",
                        "pattern": "^0x[0-9a-f]{40}$"
                      },
                      "gas": {
                        "title": "gas",
                        "name": "gas limit",
                        "summary": "A scalar value equal to the current limit of gas expenditure per block",
                        "type": "string",
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "value": {
                        "title": "value",
                        "type": "string",
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "input": {
                        "title": "input",
                        "type": "string",
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "accessList": {
                        "title": "accessList",
                        "type": "array",
                        "items": {
                          "name": "access list entry",
                          "type": "object",
                          "properties": {
                            "address": {
                              "title": "access address",
                              "type": "string",
                              "pattern": "^0x[0-9a-f]{40}$"
                            },
                            "storageKeys": {
                              "title": "storage keys",
                              "type": "array",
                              "items": {
                                "title": "32 byte hex string",
                                "type": "string",
                                "pattern": "^0x[0-9a-f]{64}$"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "name": "EIP-1559 fee market parameters",
                        "type": "object",
                        "description": "EIP-1559 dynamic fee transactions have two fee parameters.",
                        "required": ["maxFeePerGas", "maxPriorityFeePerGas"],
                        "properties": {
                          "maxPriorityFeePerGas": {
                            "title": "max priority fee per gas",
                            "description": "Maximum fee per gas the sender is willing to pay to miners in wei",
                            "type": "string",
                            "pattern": "^0x[0-9a-f]{64}$"
                          },
                          "maxFeePerGas": {
                            "title": "max fee per gas",
                            "description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei",
                            "type": "string",
                            "pattern": "^0x[0-9a-f]{64}$"
                          }
                        }
                      },
                      {
                        "name": "Legacy fee market parameters",
                        "type": "object",
                        "description": "Legacy transactions and EIP-2930 access list transaction include this parameter.",
                        "required": ["gasPrice"],
                        "properties": {
                          "gasPrice": {
                            "title": "gas price",
                            "description": "The gas price willing to be paid by the sender in wei",
                            "type": "string",
                            "pattern": "^0x[0-9a-f]{64}$"
                          }
                        }
                      }
                    ]
                  }
                ]
              }
            ]
          }
        }
      ],
      "result": {
        "name": "Return data",
        "schema": {
          "title": "hex encoded bytes",
          "type": "string",
          "pattern": "^0x[0-9a-f]+$"
        }
      }
    },
    {
      "name": "eth_coinbase",
      "summary": "Returns the coinbase address for this client",
      "params": [],
      "result": {
        "name": "Coinbase address",
        "schema": {
          "title": "address",
          "type": "string",
          "pattern": "^0x[0-9a-f]{40}$"
        }
      }
    },
    {
      "name": "eth_estimateGas",
      "summary": "Generates and returns an estimate of how much gas is necessary to allow the transaction to complete.",
      "params": [
        {
          "name": "Transaction",
          "required": true,
          "schema": {
            "title": "Transaction object with sender",
            "type": "object",
            "allOf": [
              {
                "required": ["from"],
                "properties": {
                  "from": {
                    "title": "from",
                    "description": "The transaction sender's address",
                    "type": "string",
                    "pattern": "^0x[0-9a-f]{40}$"
                  }
                }
              },
              {
                "title": "transaction object",
                "type": "object",
                "allOf": [
                  {
                    "required": ["nonce", "gas", "value", "input"],
                    "properties": {
                      "type": {
                        "title": "type",
                        "type": "string",
                        "pattern": "^0x([a-fA-F0-9]?){1,2}$"
                      },
                      "nonce": {
                        "title": "nonce",
                        "summary": "A 32-byte value which, combined with the mix-hash, proves that a sufficient amount of computation has been carried out on this block",
                        "type": "string",
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "to": {
                        "title": "to",
                        "type": "string",
                        "pattern": "^0x[0-9a-f]{40}$"
                      },
                      "gas": {
                        "title": "gas",
                        "name": "gas limit",
                        "summary": "A scalar value equal to the current limit of gas expenditure per block",
                        "type": "string",
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "value": {
                        "title": "value",
                        "type": "string",
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "input": {
                        "title": "input",
                        "type": "string",
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "accessList": {
                        "title": "accessList",
                        "type": "array",
                        "items": {
                          "name": "access list entry",
                          "type": "object",
                          "properties": {
                            "address": {
                              "title": "access address",
                              "type": "string",
                              "pattern": "^0x[0-9a-f]{40}$"
                            },
                            "storageKeys": {
                              "title": "storage keys",
                              "type": "array",
                              "items": {
                                "title": "32 byte hex string",
                                "type": "string",
                                "pattern": "^0x[0-9a-f]{64}$"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "oneOf": [
                      {
                        "name": "EIP-1559 fee market parameters",
                        "type": "object",
                        "description": "EIP-1559 dynamic fee transactions have two fee parameters.",
                        "required": ["maxFeePerGas", "maxPriorityFeePerGas"],
                        "properties": {
                          "maxPriorityFeePerGas": {
                            "title": "max priority fee per gas",
                            "description": "Maximum fee per gas the sender is willing to pay to miners in wei",
                            "type": "string",
                            "pattern": "^0x[0-9a-f]{64}$"
                          },
                          "maxFeePerGas": {
                            "title": "max fee per gas",
                            "description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei",
                            "type": "string",
                            "pattern": "^0x[0-9a-f]{64}$"
                          }
                        }
                      },
                      {
                        "name": "Legacy fee market parameters",
                        "type": "object",
                        "description": "Legacy transactions and EIP-2930 access list transaction include this parameter.",
                        "required": ["gasPrice"],
                        "properties": {
                          "gasPrice": {
                            "title": "gas price",
                            "description": "The gas price willing to be paid by the sender in wei",
                            "type": "string",
                            "pattern": "^0x[0-9a-f]{64}$"
                          }
                        }
                      }
                    ]
                  }
                ]
              }
            ]
          }
        }
      ],
      "result": {
        "name": "Gas used",
        "schema": {
          "title": "gas used",
          "summary": "A scalar value equal to the total gas usedin transactions in this block",
          "type": "string",
          "pattern": "^0x[0-9a-f]{64}$"
        }
      }
    },
    {
      "name": "eth_gasPrice",
      "summary": "Returns the current price per gas in wei.",
      "params": [],
      "result": {
        "name": "Gas price",
        "schema": {
          "title": "gas price",
          "type": "string",
          "pattern": "^0x[0-9a-f]{64}$"
        }
      }
    },
    {
      "name": "eth_getBalance",
      "summary": "Returns the balance of the account of given address.",
      "params": [
        {
          "name": "address",
          "schema": {
            "title": "address",
            "type": "string",
            "pattern": "^0x[0-9a-f]{40}$"
          }
        },
        {
          "name": "Block number or tag",
          "schema": {
            "title": "block number or block tag",
            "oneOf": [
              {
                "title": "block number",
                "type": "string",
                "pattern": "^0x[0-9a-f]{64}$"
              },
              {
                "title": "block tag",
                "type": "string",
                "enum": ["earliest", "latest", "pending"]
              }
            ]
          }
        }
      ],
      "result": {
        "name": "block number",
        "summary": "The number of blocks in the best chain of the trie",
        "schema": {
          "title": "block number",
          "type": "string",
          "pattern": "^0x[0-9a-f]{64}$"
        }
      }
    },
    {
      "name": "eth_getBlockByHash",
      "summary": "Returns information about a block by hash.",
      "params": [
        {
          "name": "block hash",
          "schema": {
            "title": "block hash",
            "type": "string",
            "pattern": "^0x[0-9a-f]{64}$"
          }
        }
      ],
      "result": {
        "name": "Block information",
        "schema": {
          "title": "block object",
          "type": "object",
          "required": ["transactions", "uncles"],
          "allOf": [
            {
              "title": "header object",
              "type": "object",
              "required": [
                "parentHash",
                "sha3Uncles",
                "miner",
                "stateRoot",
                "transactionsRoot",
                "receiptsRoot",
                "bloom",
                "totalDifficulty",
                "number",
                "gasLimit",
                "gasUsed",
                "timestamp",
                "extraData",
                "mixHash",
                "nonce"
              ],
              "properties": {
                "parentHash": {
                  "title": "parent block hash",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]{64}$"
                },
                "sha3Uncles": {
                  "title": "sha3uncles",
                  "summary": "SHA3 (Keccak-256) of the uncles data in this block",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]{64}$"
                },
                "stateRoot": {
                  "name": "block state root",
                  "summary": "The  Keccak  256-bit  hash  of  the  root node of the state trie, after all transactions are executed and finalizations applied",
                  "title": "32 byte hex string",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]{64}$"
                },
                "receiptsRoot": {
                  "name": "receipt root",
                  "summary": "The Keccak 256-bit hash of the root node of the trie structure populated with the receipts of each transaction in the transactions list portion of the block",
                  "title": "32 byte hex string",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]{64}$"
                },
                "miner": {
                  "title": "miner",
                  "summary": "address that received this block's mining rewards",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]{40}$"
                },
                "transactionsRoot": {
                  "title": "transaction root",
                  "summary": "The Keccak 256-bit hash of the root node of the trie structure populated with each transaction in the transactions list portion of the block",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]{64}$"
                },
                "bloom": {
                  "title": "header log bloom",
                  "summary": "The Bloom filter composed from index-able information (logger address and log topics)contained  in  each  log  entry  from  the  receipt  ofeach transaction in the transactions list. It reduces a log entry into a single 256-byte hash",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]{512}$"
                },
                "totalDifficulty": {
                  "title": "header total difficulty",
                  "summary": "total difficulty of the best chain until this block",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]+$"
                },
                "gasLimit": {
                  "title": "block gas limit",
                  "name": "gas limit",
                  "summary": "A scalar value equal to the current limit of gas expenditure per block",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]{64}$"
                },
                "gasUsed": {
                  "title": "gas used",
                  "summary": "A scalar value equal to the total gas usedin transactions in this block",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]{64}$"
                },
                "timestamp": {
                  "title": "block timestamp",
                  "summary": "A scalar value equal to the reasonableoutput of Unix’s time() at this block’s inception",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]{64}$"
                },
                "mixHash": {
                  "title": "block mix hash",
                  "summary": "A 32-byte hash which, combined with the nonce, proves that a sufficient amount of computation has been carried out on this block",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]{64}$"
                },
                "nonce": {
                  "title": "block nonce",
                  "summary": "A 32-byte value which, combined with the mix-hash, proves that a sufficient amount of computation has been carried out on this block",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]{64}$"
                },
                "baseFeePerGas": {
                  "title": "base fee per gas",
                  "summary": "base fee per gas, which is a function of gas used and gas target of the parent block. The base fee per gas is burned.",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]{64}$"
                },
                "number": {
                  "title": "block number",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]{64}$"
                },
                "powHash": {
                  "title": "proof of work hash",
                  "summary": "The proof of work hash of the specified block; this can be found via the Nonce and MixHash",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]{64}$"
                },
                "seedHash": {
                  "title": "seed hash",
                  "summary": "The Keccak-256 hash of the previous epoch's seed hash, if it's the first block then it's the Keccak-256 hash of a series of 32bytes of zeros",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]{64}$"
                },
                "extraData": {
                  "name": "extra data",
                  "summary": "'extra data' field of this block; must be at most 32 bytes",
                  "title": "32 hex encoded bytes",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]{64}$"
                }
              }
            },
            {
              "title": "block transaction hashes",
              "type": "array",
              "items": {
                "title": "32 byte hex string",
                "type": "string",
                "pattern": "^0x[0-9a-f]{64}$"
              }
            },
            {
              "title": "uncles",
              "type": "array",
              "items": {
                "title": "32 byte hex string",
                "type": "string",
                "pattern": "^0x[0-9a-f]{64}$"
              }
            }
          ]
        }
      }
    },
    {
      "name": "eth_getBlockByNumber",
      "summary": "Returns information about a block by number.",
      "params": [
        {
          "name": "block number",
          "summary": "The number of blocks in the best chain of the trie",
          "schema": {
            "title": "block number",
            "type": "string",
            "pattern": "^0x[0-9a-f]{64}$"
          }
        }
      ],
      "result": {
        "name": "Block information",
        "schema": {
          "name": "block object",
          "schema": {
            "title": "block object",
            "type": "object",
            "required": ["transactions", "uncles"],
            "allOf": [
              {
                "title": "header object",
                "type": "object",
                "required": [
                  "parentHash",
                  "sha3Uncles",
                  "miner",
                  "stateRoot",
                  "transactionsRoot",
                  "receiptsRoot",
                  "bloom",
                  "totalDifficulty",
                  "number",
                  "gasLimit",
                  "gasUsed",
                  "timestamp",
                  "extraData",
                  "mixHash",
                  "nonce"
                ],
                "properties": {
                  "parentHash": {
                    "title": "parent block hash",
                    "type": "string",
                    "pattern": "^0x[0-9a-f]{64}$"
                  },
                  "sha3Uncles": {
                    "title": "sha3uncles",
                    "summary": "SHA3 (Keccak-256) of the uncles data in this block",
                    "type": "string",
                    "pattern": "^0x[0-9a-f]{64}$"
                  },
                  "stateRoot": {
                    "name": "block state root",
                    "summary": "The  Keccak  256-bit  hash  of  the  root node of the state trie, after all transactions are executed and finalizations applied",
                    "title": "32 byte hex string",
                    "type": "string",
                    "pattern": "^0x[0-9a-f]{64}$"
                  },
                  "receiptsRoot": {
                    "name": "receipt root",
                    "summary": "The Keccak 256-bit hash of the root node of the trie structure populated with the receipts of each transaction in the transactions list portion of the block",
                    "title": "32 byte hex string",
                    "type": "string",
                    "pattern": "^0x[0-9a-f]{64}$"
                  },
                  "miner": {
                    "title": "miner",
                    "summary": "address that received this block's mining rewards",
                    "type": "string",
                    "pattern": "^0x[0-9a-f]{40}$"
                  },
                  "transactionsRoot": {
                    "title": "transaction root",
                    "summary": "The Keccak 256-bit hash of the root node of the trie structure populated with each transaction in the transactions list portion of the block",
                    "type": "string",
                    "pattern": "^0x[0-9a-f]{64}$"
                  },
                  "bloom": {
                    "title": "header log bloom",
                    "summary": "The Bloom filter composed from index-able information (logger address and log topics)contained  in  each  log  entry  from  the  receipt  ofeach transaction in the transactions list. It reduces a log entry into a single 256-byte hash",
                    "type": "string",
                    "pattern": "^0x[0-9a-f]{512}$"
                  },
                  "totalDifficulty": {
                    "title": "header total difficulty",
                    "summary": "total difficulty of the best chain until this block",
                    "type": "string",
                    "pattern": "^0x[0-9a-f]+$"
                  },
                  "gasLimit": {
                    "title": "block gas limit",
                    "name": "gas limit",
                    "summary": "A scalar value equal to the current limit of gas expenditure per block",
                    "type": "string",
                    "pattern": "^0x[0-9a-f]{64}$"
                  },
                  "gasUsed": {
                    "title": "gas used",
                    "summary": "A scalar value equal to the total gas usedin transactions in this block",
                    "type": "string",
                    "pattern": "^0x[0-9a-f]{64}$"
                  },
                  "timestamp": {
                    "title": "block timestamp",
                    "summary": "A scalar value equal to the reasonableoutput of Unix’s time() at this block’s inception",
                    "type": "string",
                    "pattern": "^0x[0-9a-f]{64}$"
                  },
                  "mixHash": {
                    "title": "block mix hash",
                    "summary": "A 32-byte hash which, combined with the nonce, proves that a sufficient amount of computation has been carried out on this block",
                    "type": "string",
                    "pattern": "^0x[0-9a-f]{64}$"
                  },
                  "nonce": {
                    "title": "block nonce",
                    "summary": "A 32-byte value which, combined with the mix-hash, proves that a sufficient amount of computation has been carried out on this block",
                    "type": "string",
                    "pattern": "^0x[0-9a-f]{64}$"
                  },
                  "baseFeePerGas": {
                    "title": "base fee per gas",
                    "summary": "base fee per gas, which is a function of gas used and gas target of the parent block. The base fee per gas is burned.",
                    "type": "string",
                    "pattern": "^0x[0-9a-f]{64}$"
                  },
                  "number": {
                    "title": "block number",
                    "type": "string",
                    "pattern": "^0x[0-9a-f]{64}$"
                  },
                  "powHash": {
                    "title": "proof of work hash",
                    "summary": "The proof of work hash of the specified block; this can be found via the Nonce and MixHash",
                    "type": "string",
                    "pattern": "^0x[0-9a-f]{64}$"
                  },
                  "seedHash": {
                    "title": "seed hash",
                    "summary": "The Keccak-256 hash of the previous epoch's seed hash, if it's the first block then it's the Keccak-256 hash of a series of 32bytes of zeros",
                    "type": "string",
                    "pattern": "^0x[0-9a-f]{64}$"
                  },
                  "extraData": {
                    "name": "extra data",
                    "summary": "'extra data' field of this block; must be at most 32 bytes",
                    "title": "32 hex encoded bytes",
                    "type": "string",
                    "pattern": "^0x[0-9a-f]{64}$"
                  }
                }
              },
              {
                "title": "block transaction hashes",
                "type": "array",
                "items": {
                  "title": "32 byte hex string",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]{64}$"
                }
              },
              {
                "title": "uncles",
                "type": "array",
                "items": {
                  "title": "32 byte hex string",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]{64}$"
                }
              }
            ]
          }
        }
      }
    },
    {
      "name": "eth_getBlockTransactionCountByHash",
      "summary": "Returns the number of transactions in a block specified by block hash",
      "params": [
        {
          "name": "block hash",
          "schema": {
            "title": "block hash",
            "type": "string",
            "pattern": "^0x[0-9a-f]{64}$"
          }
        }
      ],
      "result": {
        "name": "block transaction count",
        "summary": "The number of transactions on a given block",
        "schema": {
          "title": "array of hex encoded unsigned integers",
          "type": "array",
          "items": [
            {
              "title": "hex encoded unsigned integer",
              "type": "string",
              "pattern": "^0x[0-9a-f]{64}$"
            }
          ]
        }
      }
    },
    {
      "name": "eth_getBlockTransactionCountByNumber",
      "summary": "Returns the number of transactions in a block matching specified by the block number.",
      "params": [
        {
          "name": "block number",
          "summary": "The number of blocks in the best chain of the trie",
          "schema": {
            "title": "block number",
            "type": "string",
            "pattern": "^0x[0-9a-f]{64}$"
          }
        }
      ],
      "result": {
        "name": "block transaction count",
        "summary": "The number of transactions on a given block",
        "schema": {
          "title": "array of hex encoded unsigned integers",
          "type": "array",
          "items": [
            {
              "title": "hex encoded unsigned integer",
              "type": "string",
              "pattern": "^0x[0-9a-f]{64}$"
            }
          ]
        }
      }
    },
    {
      "name": "eth_getCode",
      "summary": "Returns code at a given address.",
      "params": [
        {
          "name": "address",
          "schema": {
            "title": "address",
            "type": "string",
            "pattern": "^0x[0-9a-f]{40}$"
          }
        },
        {
          "name": "Block number or tag",
          "schema": {
            "title": "block number or block tag",
            "oneOf": [
              {
                "title": "block number",
                "type": "string",
                "pattern": "^0x[0-9a-f]{64}$"
              },
              {
                "title": "block tag",
                "type": "string",
                "enum": ["earliest", "latest", "pending"]
              }
            ]
          }
        }
      ],
      "result": {
        "name": "Bytecode",
        "schema": {
          "title": "hex encoded bytes",
          "type": "string",
          "pattern": "^0x[0-9a-f]+$"
        }
      }
    },
    {
      "name": "eth_getFilterChanges",
      "summary": "Returns a list of all logs based on filter ID since the last log retrieval",
      "params": [
        {
          "name": "filter id",
          "schema": {
            "name": "Filter Identifier",
            "summary": "ID of the filter",
            "title": "hex encoded unsigned integer",
            "type": "string",
            "pattern": "^0x[0-9a-f]{64}$"
          }
        }
      ],
      "result": {
        "name": "filter results",
        "schema": {
          "title": "filter results",
          "oneOf": [
            {
              "name": "new block hashes",
              "type": "array",
              "items": {
                "title": "32 byte hex string",
                "type": "string",
                "pattern": "^0x[0-9a-f]{64}$"
              }
            },
            {
              "name": "new transaction hashes",
              "type": "array",
              "items": {
                "title": "32 byte hex string",
                "type": "string",
                "pattern": "^0x[0-9a-f]{64}$"
              }
            },
            {
              "name": "new filter logs",
              "title": "log objects",
              "type": "array",
              "items": [
                {
                  "title": "log object",
                  "type": "object",
                  "properties": {
                    "removed": { "title": "removed", "type": "boolean" },
                    "logIndex": {
                      "title": "log index",
                      "type": "string",
                      "pattern": "^0x[0-9a-f]{64}$"
                    },
                    "transactionIndex": {
                      "title": "transaction index",
                      "type": "string",
                      "pattern": "^0x[0-9a-f]{64}$"
                    },
                    "transactionHash": {
                      "title": "32 byte hex string",
                      "type": "string",
                      "pattern": "^0x[0-9a-f]{64}$"
                    },
                    "blockHash": {
                      "title": "32 byte hex string",
                      "type": "string",
                      "pattern": "^0x[0-9a-f]{64}$"
                    },
                    "blockNumber": {
                      "title": "block number",
                      "type": "string",
                      "pattern": "^0x[0-9a-f]{64}$"
                    },
                    "address": {
                      "title": "address",
                      "type": "string",
                      "pattern": "^0x[0-9a-f]{40}$"
                    },
                    "data": {
                      "title": "hex encoded bytes",
                      "type": "string",
                      "pattern": "^0x[0-9a-f]+$"
                    },
                    "topics": {
                      "title": "topics",
                      "type": "array",
                      "items": {
                        "title": "topic",
                        "type": "string",
                        "pattern": "^0x[0-9a-f]{64}$"
                      }
                    }
                  }
                }
              ]
            }
          ]
        }
      }
    },
    {
      "name": "eth_getFilterLogs",
      "summary": "Returns a list of all logs based on filter ID",
      "params": [
        {
          "name": "filter id",
          "schema": {
            "name": "Filter Identifier",
            "summary": "ID of the filter",
            "title": "hex encoded unsigned integer",
            "type": "string",
            "pattern": "^0x[0-9a-f]{64}$"
          },
          "required": true
        }
      ],
      "result": {
        "name": "logs",
        "description": "The return value of eth_getFilterLogs when retrieving logs from eth_newBlockFilter and eth_newPendingTransactionFilter filters will be an array of hashes, not an array of Log objects.",
        "summary": "array of log objects",
        "schema": {
          "title": "log objects",
          "type": "array",
          "items": [
            {
              "title": "log object",
              "type": "object",
              "properties": {
                "removed": { "title": "removed", "type": "boolean" },
                "logIndex": {
                  "title": "log index",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]{64}$"
                },
                "transactionIndex": {
                  "title": "transaction index",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]{64}$"
                },
                "transactionHash": {
                  "title": "32 byte hex string",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]{64}$"
                },
                "blockHash": {
                  "title": "32 byte hex string",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]{64}$"
                },
                "blockNumber": {
                  "title": "block number",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]{64}$"
                },
                "address": {
                  "title": "address",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]{40}$"
                },
                "data": {
                  "title": "hex encoded bytes",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]+$"
                },
                "topics": {
                  "title": "topics",
                  "type": "array",
                  "items": {
                    "title": "topic",
                    "type": "string",
                    "pattern": "^0x[0-9a-f]{64}$"
                  }
                }
              }
            }
          ]
        }
      }
    },
    {
      "name": "eth_getLogs",
      "summary": "Returns a list of all logs based on a filter object",
      "params": [
        {
          "name": "filter object",
          "schema": {
            "title": "filter object",
            "type": "object",
            "properties": {
              "fromBlock": {
                "name": "from block",
                "title": "block number or block tag",
                "oneOf": [
                  {
                    "title": "block number",
                    "type": "string",
                    "pattern": "^0x[0-9a-f]{64}$"
                  },
                  {
                    "title": "block tag",
                    "type": "string",
                    "enum": ["earliest", "latest", "pending"]
                  }
                ]
              },
              "toBlock": {
                "name": "to block",
                "title": "block number or block tag",
                "oneOf": [
                  {
                    "title": "block number",
                    "type": "string",
                    "pattern": "^0x[0-9a-f]{64}$"
                  },
                  {
                    "title": "block tag",
                    "type": "string",
                    "enum": ["earliest", "latest", "pending"]
                  }
                ]
              },
              "address": {
                "title": "Address(es)",
                "summary": "contract address or a list of addresses from which logs should originate",
                "oneOf": [
                  {
                    "title": "address",
                    "type": "string",
                    "pattern": "^0x[0-9a-f]{40}$"
                  },
                  {
                    "title": "addresses",
                    "type": "array",
                    "items": {
                      "title": "address",
                      "type": "string",
                      "pattern": "^0x[0-9a-f]{40}$"
                    }
                  }
                ]
              },
              "topics": {
                "title": "topics",
                "type": "array",
                "items": {
                  "title": "topic",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]{64}$"
                }
              }
            }
          }
        }
      ],
      "result": {
        "name": "logs",
        "summary": "array of log objects",
        "schema": {
          "title": "log objects",
          "type": "array",
          "items": [
            {
              "title": "log object",
              "type": "object",
              "properties": {
                "removed": { "title": "removed", "type": "boolean" },
                "logIndex": {
                  "title": "log index",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]{64}$"
                },
                "transactionIndex": {
                  "title": "transaction index",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]{64}$"
                },
                "transactionHash": {
                  "title": "32 byte hex string",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]{64}$"
                },
                "blockHash": {
                  "title": "32 byte hex string",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]{64}$"
                },
                "blockNumber": {
                  "title": "block number",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]{64}$"
                },
                "address": {
                  "title": "address",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]{40}$"
                },
                "data": {
                  "title": "hex encoded bytes",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]+$"
                },
                "topics": {
                  "title": "topics",
                  "type": "array",
                  "items": {
                    "title": "topic",
                    "type": "string",
                    "pattern": "^0x[0-9a-f]{64}$"
                  }
                }
              }
            }
          ]
        }
      }
    },
    {
      "name": "eth_getStorageAt",
      "description": "Returns the value from a storage position at an address",
      "params": [
        {
          "name": "address",
          "schema": {
            "title": "address",
            "type": "string",
            "pattern": "^0x[0-9a-f]{40}$"
          },
          "summary": "address of stored data"
        },
        {
          "name": "dataIndex",
          "summary": "index into stored data",
          "schema": {
            "title": "data index",
            "type": "string",
            "pattern": "^0x[0-9a-f]{64}$"
          }
        },
        {
          "name": "block number or identifier or hash",
          "summary": "The desired block number, its hash, or a block tag",
          "schema": {
            "title": "block number or tag or hsh",
            "oneOf": [
              {
                "title": "block number",
                "type": "string",
                "pattern": "^0x[0-9a-f]{64}$"
              },
              {
                "title": "block tag",
                "type": "string",
                "enum": ["earliest", "latest", "pending"]
              },
              {
                "title": "block hash",
                "type": "string",
                "pattern": "^0x[0-9a-f]{64}$"
              }
            ]
          }
        }
      ],
      "result": {
        "name": "data stored",
        "summary": "data stored at the given address and data index",
        "schema": {
          "title": "hex encoded bytes",
          "type": "string",
          "pattern": "^0x[0-9a-f]+$"
        }
      }
    },
    {
      "name": "eth_getTransactionByBlockHashAndIndex.json",
      "description": "Returns information about a transaction specified by block hash and transaction index",
      "params": [
        {
          "name": "block hash",
          "schema": {
            "title": "block hash",
            "type": "string",
            "pattern": "^0x[0-9a-f]{64}$"
          }
        },
        {
          "name": "transaction index",
          "schema": {
            "name": "transactionIndex",
            "description": "index of a transaction in the specified block",
            "title": "hex encoded unsigned integer",
            "type": "string",
            "pattern": "^0x[0-9a-f]{64}$"
          }
        }
      ],
      "result": {
        "name": "hash or null",
        "schema": {
          "title": "hash or null",
          "oneOf": [
            {
              "title": "transactionHash",
              "summary": "hash of a transaction",
              "type": "string",
              "pattern": "^0x[0-9a-f]{64}$"
            },
            {
              "title": "null",
              "type": "null",
              "description": "null, undefined, None"
            }
          ]
        }
      }
    },
    {
      "name": "eth_getTransactionByBlockNumberAndIndex",
      "summary": "Returns information about a transaction specified by block number and transaction index",
      "params": [
        {
          "name": "Block number or tag",
          "schema": {
            "title": "block number or block tag",
            "oneOf": [
              {
                "title": "block number",
                "type": "string",
                "pattern": "^0x[0-9a-f]{64}$"
              },
              {
                "title": "block tag",
                "type": "string",
                "enum": ["earliest", "latest", "pending"]
              }
            ]
          }
        },
        {
          "name": "transaction index",
          "schema": {
            "name": "transactionIndex",
            "description": "index of a transaction in the specified block",
            "title": "hex encoded unsigned integer",
            "type": "string",
            "pattern": "^0x[0-9a-f]{64}$"
          }
        }
      ],
      "result": {
        "name": "hash or null",
        "schema": {
          "title": "hash or null",
          "oneOf": [
            {
              "title": "transactionHash",
              "summary": "hash of a transaction",
              "type": "string",
              "pattern": "^0x[0-9a-f]{64}$"
            },
            {
              "title": "null",
              "type": "null",
              "description": "null, undefined, None"
            }
          ]
        }
      }
    },
    {
      "name": "eth_getTransactionByHash",
      "summary": "Returns information about a transaction specified by hash",
      "params": [
        {
          "name": "transaction hash",
          "schema": {
            "title": "transactionHash",
            "summary": "hash of a transaction",
            "type": "string",
            "pattern": "^0x[0-9a-f]{64}$"
          }
        }
      ],
      "result": {
        "name": "hash or null",
        "schema": {
          "title": "hash or null",
          "oneOf": [
            {
              "title": "transactionHash",
              "summary": "hash of a transaction",
              "type": "string",
              "pattern": "^0x[0-9a-f]{64}$"
            },
            {
              "title": "null",
              "type": "null",
              "description": "null, undefined, None"
            }
          ]
        }
      }
    },
    {
      "name": "eth_getTransactionCount",
      "summary": "Returns the number of transactions sent from an address",
      "params": [
        {
          "name": "address",
          "schema": {
            "title": "address",
            "type": "string",
            "pattern": "^0x[0-9a-f]{40}$"
          },
          "summary": "address to query for sent transactions",
          "required": true
        },
        {
          "name": "block number or identifier or hash",
          "summary": "The desired block number, its hash, or a block tag",
          "schema": {
            "title": "block number or tag or hsh",
            "oneOf": [
              {
                "title": "block number",
                "type": "string",
                "pattern": "^0x[0-9a-f]{64}$"
              },
              {
                "title": "block tag",
                "type": "string",
                "enum": ["earliest", "latest", "pending"]
              },
              {
                "title": "block hash",
                "type": "string",
                "pattern": "^0x[0-9a-f]{64}$"
              }
            ]
          },
          "required": true
        }
      ],
      "result": {
        "name": "transaction count",
        "schema": {
          "title": "transaction count",
          "summary": "number of transactions sent from the specified address",
          "type": "string",
          "pattern": "^0x[0-9a-f]{64}$"
        }
      }
    },
    {
      "name": "eth_getTransactionReceipt",
      "summary": "Returns the receipt of a transaction specified by hash. Transaction receipts are unavailable for pending transactions.",
      "params": [
        {
          "name": "transaction hash",
          "schema": {
            "title": "transactionHash",
            "summary": "hash of a transaction",
            "type": "string",
            "pattern": "^0x[0-9a-f]{64}$"
          }
        }
      ],
      "result": {
        "name": "hash or null",
        "schema": {
          "title": "hash or null",
          "oneOf": [
            {
              "title": "transactionHash",
              "summary": "hash of a transaction",
              "type": "string",
              "pattern": "^0x[0-9a-f]{64}$"
            },
            {
              "title": "null",
              "type": "null",
              "description": "null, undefined, None"
            }
          ]
        }
      }
    },
    {
      "name": "eth_getUncleByBlockHashAndIndex",
      "summary": "Returns information about an uncle specified by block hash and uncle index position",
      "params": [
        {
          "name": "block hash",
          "schema": {
            "title": "block hash",
            "type": "string",
            "pattern": "^0x[0-9a-f]{64}$"
          }
        },
        {
          "name": "uncle index",
          "schema": {
            "title": "uncle index",
            "summary": "index of uncle",
            "type": "string",
            "pattern": "^0x[0-9a-f]{64}$"
          }
        }
      ],
      "result": {
        "name": "uncle or null",
        "schema": {
          "title": "uncle or null",
          "summary": "null if no block or uncle is found, otherwise an uncle object",
          "oneOf": [
            {
              "title": "uncle object",
              "type": "object",
              "properties": {
                "extraData": {
                  "name": "extra data",
                  "summary": "'extra data' field of this block; must be at most 32 bytes",
                  "title": "32 hex encoded bytes",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]{64}$"
                },
                "hash": {
                  "title": "hash",
                  "oneOf": [
                    {
                      "title": "block hash",
                      "type": "string",
                      "pattern": "^0x[0-9a-f]{64}$"
                    },
                    {
                      "title": "null",
                      "type": "null",
                      "description": "null, undefined, None"
                    }
                  ]
                },
                "logsBloom": {
                  "title": "logsBloom",
                  "summary": "logs bloom filter or null if pending",
                  "oneOf": [
                    {
                      "title": "bloom filter",
                      "summary": "The Bloom filter composed from index-able information (logger address and log topics)contained  in  each  log  entry  from  the  receipt  ofeach transaction in the transactions list. It reduces a log entry into a single 256-byte hash",
                      "type": "string",
                      "pattern": "^0x[0-9a-f]{512}$"
                    },
                    {
                      "title": "null",
                      "type": "null",
                      "description": "null, undefined, None"
                    }
                  ]
                },
                "miner": {
                  "title": "miner",
                  "summary": "address that received this block's mining rewards",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]{40}$"
                },
                "nonce": {
                  "title": "nonce",
                  "oneOf": [
                    {
                      "title": "proof of work nonce",
                      "summary": "A 32-byte value which, combined with the mix-hash, proves that a sufficient amount of computation has been carried out on this block",
                      "type": "string",
                      "pattern": "^0x[0-9a-f]{64}$"
                    },
                    {
                      "title": "null",
                      "type": "null",
                      "description": "null, undefined, None"
                    }
                  ]
                },
                "parentHash": {
                  "title": "parent block hash",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]{64}$"
                },
                "receiptsRoot": {
                  "name": "receipt root",
                  "summary": "The Keccak 256-bit hash of the root node of the trie structure populated with the receipts of each transaction in the transactions list portion of the block",
                  "title": "32 byte hex string",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]{64}$"
                },
                "sha3Uncles": {
                  "title": "ommersHash",
                  "summary": "SHA3 (Keccak-256) of the uncles data in this block",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]{64}$"
                },
                "stateRoot": {
                  "name": "block state root",
                  "summary": "The  Keccak  256-bit  hash  of  the  root node of the state trie, after all transactions are executed and finalizations applied",
                  "title": "32 byte hex string",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]{64}$"
                },
                "size": {
                  "title": "size",
                  "name": "block size",
                  "summary": "size of this block in bytes",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]+$"
                },
                "timestamp": {
                  "title": "timestamp",
                  "summary": "A scalar value equal to the reasonableoutput of Unix’s time() at this block’s inception",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]{64}$"
                },
                "totalDifficulty": {
                  "title": "totalDifficulty",
                  "summary": "total difficulty of the best chain until this block",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]+$"
                },
                "Uncles": {
                  "name": "uncles",
                  "summary": "list of uncle hashes",
                  "title": "transaction uncles",
                  "type": "array",
                  "items": [
                    {
                      "title": "transaction object",
                      "type": "object",
                      "allOf": [
                        {
                          "required": ["nonce", "gas", "value", "input"],
                          "properties": {
                            "type": {
                              "title": "type",
                              "type": "string",
                              "pattern": "^0x([a-fA-F0-9]?){1,2}$"
                            },
                            "nonce": {
                              "title": "nonce",
                              "summary": "A 32-byte value which, combined with the mix-hash, proves that a sufficient amount of computation has been carried out on this block",
                              "type": "string",
                              "pattern": "^0x[0-9a-f]{64}$"
                            },
                            "to": {
                              "title": "to",
                              "type": "string",
                              "pattern": "^0x[0-9a-f]{40}$"
                            },
                            "gas": {
                              "title": "gas",
                              "name": "gas limit",
                              "summary": "A scalar value equal to the current limit of gas expenditure per block",
                              "type": "string",
                              "pattern": "^0x[0-9a-f]{64}$"
                            },
                            "value": {
                              "title": "value",
                              "type": "string",
                              "pattern": "^0x[0-9a-f]{64}$"
                            },
                            "input": {
                              "title": "input",
                              "type": "string",
                              "pattern": "^0x[0-9a-f]{64}$"
                            },
                            "accessList": {
                              "title": "accessList",
                              "type": "array",
                              "items": {
                                "name": "access list entry",
                                "type": "object",
                                "properties": {
                                  "address": {
                                    "title": "access address",
                                    "type": "string",
                                    "pattern": "^0x[0-9a-f]{40}$"
                                  },
                                  "storageKeys": {
                                    "title": "storage keys",
                                    "type": "array",
                                    "items": {
                                      "title": "32 byte hex string",
                                      "type": "string",
                                      "pattern": "^0x[0-9a-f]{64}$"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "oneOf": [
                            {
                              "name": "EIP-1559 fee market parameters",
                              "type": "object",
                              "description": "EIP-1559 dynamic fee transactions have two fee parameters.",
                              "required": [
                                "maxFeePerGas",
                                "maxPriorityFeePerGas"
                              ],
                              "properties": {
                                "maxPriorityFeePerGas": {
                                  "title": "max priority fee per gas",
                                  "description": "Maximum fee per gas the sender is willing to pay to miners in wei",
                                  "type": "string",
                                  "pattern": "^0x[0-9a-f]{64}$"
                                },
                                "maxFeePerGas": {
                                  "title": "max fee per gas",
                                  "description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei",
                                  "type": "string",
                                  "pattern": "^0x[0-9a-f]{64}$"
                                }
                              }
                            },
                            {
                              "name": "Legacy fee market parameters",
                              "type": "object",
                              "description": "Legacy transactions and EIP-2930 access list transaction include this parameter.",
                              "required": ["gasPrice"],
                              "properties": {
                                "gasPrice": {
                                  "title": "gas price",
                                  "description": "The gas price willing to be paid by the sender in wei",
                                  "type": "string",
                                  "pattern": "^0x[0-9a-f]{64}$"
                                }
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            },
            {
              "title": "null",
              "type": "null",
              "description": "null, undefined, None"
            }
          ]
        }
      }
    },
    {
      "name": "eth_getUncleByBlockNumberAndIndex",
      "summary": "Returns information about an uncle specified by block number and uncle index position",
      "params": [
        {
          "name": "Block number or tag",
          "schema": {
            "title": "block number or block tag",
            "oneOf": [
              {
                "title": "block number",
                "type": "string",
                "pattern": "^0x[0-9a-f]{64}$"
              },
              {
                "title": "block tag",
                "type": "string",
                "enum": ["earliest", "latest", "pending"]
              }
            ]
          }
        },
        {
          "name": "integer",
          "schema": {
            "title": "hex encoded unsigned integer",
            "type": "string",
            "pattern": "^0x[0-9a-f]{64}$"
          }
        }
      ],
      "result": {
        "name": "uncle or null",
        "schema": {
          "title": "uncle or null",
          "summary": "null if no block or uncle is found, otherwise an uncle object",
          "oneOf": [
            {
              "title": "uncle object",
              "type": "object",
              "properties": {
                "extraData": {
                  "name": "extra data",
                  "summary": "'extra data' field of this block; must be at most 32 bytes",
                  "title": "32 hex encoded bytes",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]{64}$"
                },
                "hash": {
                  "title": "hash",
                  "oneOf": [
                    {
                      "title": "block hash",
                      "type": "string",
                      "pattern": "^0x[0-9a-f]{64}$"
                    },
                    {
                      "title": "null",
                      "type": "null",
                      "description": "null, undefined, None"
                    }
                  ]
                },
                "logsBloom": {
                  "title": "logsBloom",
                  "summary": "logs bloom filter or null if pending",
                  "oneOf": [
                    {
                      "title": "bloom filter",
                      "summary": "The Bloom filter composed from index-able information (logger address and log topics)contained  in  each  log  entry  from  the  receipt  ofeach transaction in the transactions list. It reduces a log entry into a single 256-byte hash",
                      "type": "string",
                      "pattern": "^0x[0-9a-f]{512}$"
                    },
                    {
                      "title": "null",
                      "type": "null",
                      "description": "null, undefined, None"
                    }
                  ]
                },
                "miner": {
                  "title": "miner",
                  "summary": "address that received this block's mining rewards",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]{40}$"
                },
                "nonce": {
                  "title": "nonce",
                  "oneOf": [
                    {
                      "title": "proof of work nonce",
                      "summary": "A 32-byte value which, combined with the mix-hash, proves that a sufficient amount of computation has been carried out on this block",
                      "type": "string",
                      "pattern": "^0x[0-9a-f]{64}$"
                    },
                    {
                      "title": "null",
                      "type": "null",
                      "description": "null, undefined, None"
                    }
                  ]
                },
                "parentHash": {
                  "title": "parent block hash",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]{64}$"
                },
                "receiptsRoot": {
                  "name": "receipt root",
                  "summary": "The Keccak 256-bit hash of the root node of the trie structure populated with the receipts of each transaction in the transactions list portion of the block",
                  "title": "32 byte hex string",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]{64}$"
                },
                "sha3Uncles": {
                  "title": "ommersHash",
                  "summary": "SHA3 (Keccak-256) of the uncles data in this block",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]{64}$"
                },
                "stateRoot": {
                  "name": "block state root",
                  "summary": "The  Keccak  256-bit  hash  of  the  root node of the state trie, after all transactions are executed and finalizations applied",
                  "title": "32 byte hex string",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]{64}$"
                },
                "size": {
                  "title": "size",
                  "name": "block size",
                  "summary": "size of this block in bytes",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]+$"
                },
                "timestamp": {
                  "title": "timestamp",
                  "summary": "A scalar value equal to the reasonableoutput of Unix’s time() at this block’s inception",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]{64}$"
                },
                "totalDifficulty": {
                  "title": "totalDifficulty",
                  "summary": "total difficulty of the best chain until this block",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]+$"
                },
                "Uncles": {
                  "name": "uncles",
                  "summary": "list of uncle hashes",
                  "title": "transaction uncles",
                  "type": "array",
                  "items": [
                    {
                      "title": "transaction object",
                      "type": "object",
                      "allOf": [
                        {
                          "required": ["nonce", "gas", "value", "input"],
                          "properties": {
                            "type": {
                              "title": "type",
                              "type": "string",
                              "pattern": "^0x([a-fA-F0-9]?){1,2}$"
                            },
                            "nonce": {
                              "title": "nonce",
                              "summary": "A 32-byte value which, combined with the mix-hash, proves that a sufficient amount of computation has been carried out on this block",
                              "type": "string",
                              "pattern": "^0x[0-9a-f]{64}$"
                            },
                            "to": {
                              "title": "to",
                              "type": "string",
                              "pattern": "^0x[0-9a-f]{40}$"
                            },
                            "gas": {
                              "title": "gas",
                              "name": "gas limit",
                              "summary": "A scalar value equal to the current limit of gas expenditure per block",
                              "type": "string",
                              "pattern": "^0x[0-9a-f]{64}$"
                            },
                            "value": {
                              "title": "value",
                              "type": "string",
                              "pattern": "^0x[0-9a-f]{64}$"
                            },
                            "input": {
                              "title": "input",
                              "type": "string",
                              "pattern": "^0x[0-9a-f]{64}$"
                            },
                            "accessList": {
                              "title": "accessList",
                              "type": "array",
                              "items": {
                                "name": "access list entry",
                                "type": "object",
                                "properties": {
                                  "address": {
                                    "title": "access address",
                                    "type": "string",
                                    "pattern": "^0x[0-9a-f]{40}$"
                                  },
                                  "storageKeys": {
                                    "title": "storage keys",
                                    "type": "array",
                                    "items": {
                                      "title": "32 byte hex string",
                                      "type": "string",
                                      "pattern": "^0x[0-9a-f]{64}$"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "oneOf": [
                            {
                              "name": "EIP-1559 fee market parameters",
                              "type": "object",
                              "description": "EIP-1559 dynamic fee transactions have two fee parameters.",
                              "required": [
                                "maxFeePerGas",
                                "maxPriorityFeePerGas"
                              ],
                              "properties": {
                                "maxPriorityFeePerGas": {
                                  "title": "max priority fee per gas",
                                  "description": "Maximum fee per gas the sender is willing to pay to miners in wei",
                                  "type": "string",
                                  "pattern": "^0x[0-9a-f]{64}$"
                                },
                                "maxFeePerGas": {
                                  "title": "max fee per gas",
                                  "description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei",
                                  "type": "string",
                                  "pattern": "^0x[0-9a-f]{64}$"
                                }
                              }
                            },
                            {
                              "name": "Legacy fee market parameters",
                              "type": "object",
                              "description": "Legacy transactions and EIP-2930 access list transaction include this parameter.",
                              "required": ["gasPrice"],
                              "properties": {
                                "gasPrice": {
                                  "title": "gas price",
                                  "description": "The gas price willing to be paid by the sender in wei",
                                  "type": "string",
                                  "pattern": "^0x[0-9a-f]{64}$"
                                }
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            },
            {
              "title": "null",
              "type": "null",
              "description": "null, undefined, None"
            }
          ]
        }
      }
    },
    {
      "name": "eth_getUncleCountByBlockHash",
      "summary": "Returns the number of uncles in a block specified by block hash",
      "params": [
        {
          "name": "block hash",
          "schema": {
            "title": "block hash",
            "type": "string",
            "pattern": "^0x[0-9a-f]{64}$"
          }
        }
      ],
      "result": {
        "name": "uncle count",
        "schema": {
          "title": "uncle count",
          "summary": "number of uncles in the specified block",
          "type": "string",
          "pattern": "^0x[0-9a-f]{64}$"
        }
      }
    },
    {
      "name": "eth_getUncleCountByBlockNumber",
      "summary": "Returns the number of uncles in a block specified by block number",
      "params": [
        {
          "name": "Block number or tag",
          "schema": {
            "title": "block number or block tag",
            "oneOf": [
              {
                "title": "block number",
                "type": "string",
                "pattern": "^0x[0-9a-f]{64}$"
              },
              {
                "title": "block tag",
                "type": "string",
                "enum": ["earliest", "latest", "pending"]
              }
            ]
          }
        }
      ],
      "result": {
        "name": "uncle count",
        "schema": {
          "title": "uncle count",
          "summary": "number of uncles in the specified block",
          "type": "string",
          "pattern": "^0x[0-9a-f]{64}$"
        }
      }
    },
    {
      "name": "eth_getWork",
      "summary": "Returns a list containing relevant information for proof-of-work",
      "params": [],
      "result": {
        "name": "work",
        "schema": {
          "type": "array",
          "items": [
            {
              "title": "proof of work hash",
              "summary": "The proof of work hash of the specified block; this can be found via the Nonce and MixHash",
              "type": "string",
              "pattern": "^0x[0-9a-f]{64}$"
            },
            {
              "title": "seed hash",
              "summary": "The Keccak-256 hash of the previous epoch's seed hash, if it's the first block then it's the Keccak-256 hash of a series of 32bytes of zeros",
              "type": "string",
              "pattern": "^0x[0-9a-f]{64}$"
            },
            {
              "title": "boundary condition",
              "summary": "boundary condition ('target'), 2^256 / difficulty",
              "type": "string",
              "pattern": "^0x[0-9a-f]{64}$"
            }
          ]
        }
      }
    },
    {
      "name": "eth_hashrate",
      "summary": "Returns the number of hashes-per-second this node is mining at",
      "params": [],
      "result": {
        "name": "hashrate",
        "summary": "number of hashes-per-second this node is mining at",
        "schema": {
          "title": "hex encoded unsigned integer",
          "type": "string",
          "pattern": "^0x[0-9a-f]{64}$"
        }
      }
    },
    {
      "name": "eth_mining",
      "summary": "Determines if this client is mining new blocks",
      "params": [],
      "result": {
        "name": "is mining",
        "summary": "true if this client is mining or false if it is not mining",
        "schema": { "type": "boolean" }
      }
    },
    {
      "name": "eth_newBlockFilter",
      "summary": "Creates a filter to listen for new blocks that can be used with eth_getFilterChanges",
      "params": [],
      "result": {
        "name": "filter id",
        "schema": {
          "name": "Filter Identifier",
          "summary": "ID of the filter",
          "title": "hex encoded unsigned integer",
          "type": "string",
          "pattern": "^0x[0-9a-f]{64}$"
        }
      }
    },
    {
      "name": "eth_newFilter",
      "summary": "Creates a filter to listen for specific state changes that can then be used with eth_getFilterChanges",
      "params": [
        {
          "name": "filter object",
          "schema": {
            "title": "filter object",
            "type": "object",
            "properties": {
              "fromBlock": {
                "name": "from block",
                "title": "block number or block tag",
                "oneOf": [
                  {
                    "title": "block number",
                    "type": "string",
                    "pattern": "^0x[0-9a-f]{64}$"
                  },
                  {
                    "title": "block tag",
                    "type": "string",
                    "enum": ["earliest", "latest", "pending"]
                  }
                ]
              },
              "toBlock": {
                "name": "to block",
                "title": "block number or block tag",
                "oneOf": [
                  {
                    "title": "block number",
                    "type": "string",
                    "pattern": "^0x[0-9a-f]{64}$"
                  },
                  {
                    "title": "block tag",
                    "type": "string",
                    "enum": ["earliest", "latest", "pending"]
                  }
                ]
              },
              "address": {
                "title": "Address(es)",
                "summary": "contract address or a list of addresses from which logs should originate",
                "oneOf": [
                  {
                    "title": "address",
                    "type": "string",
                    "pattern": "^0x[0-9a-f]{40}$"
                  },
                  {
                    "title": "addresses",
                    "type": "array",
                    "items": {
                      "title": "address",
                      "type": "string",
                      "pattern": "^0x[0-9a-f]{40}$"
                    }
                  }
                ]
              },
              "topics": {
                "title": "topics",
                "type": "array",
                "items": {
                  "title": "topic",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]{64}$"
                }
              }
            }
          }
        }
      ],
      "result": {
        "name": "filter id",
        "schema": {
          "name": "Filter Identifier",
          "summary": "ID of the filter",
          "title": "hex encoded unsigned integer",
          "type": "string",
          "pattern": "^0x[0-9a-f]{64}$"
        }
      }
    },
    {
      "name": "eth_newPendingTransactionFilter",
      "summary": "Creates a filter to listen for new pending transactions that can be used with eth_getFilterChanges",
      "params": [],
      "result": {
        "name": "filter id",
        "schema": {
          "name": "Filter Identifier",
          "summary": "ID of the filter",
          "title": "hex encoded unsigned integer",
          "type": "string",
          "pattern": "^0x[0-9a-f]{64}$"
        }
      }
    },
    {
      "name": "eth_protocolVersion",
      "summary": "Returns the current Ethereum protocol version",
      "params": [],
      "result": {
        "name": "protocol version",
        "schema": {
          "title": "protocol version",
          "summary": "current Ethereum protocol version",
          "type": "string",
          "pattern": "^0x[0-9a-f]{64}$"
        }
      }
    },
    {
      "name": "eth_sendRawTransaction",
      "summary": "Sends an already-signed transaction to the network",
      "params": [
        {
          "name": "signed transaction data",
          "schema": {
            "title": "signed transaction data",
            "summary": "the encoding of the [...rawTransactionData, v, r, s] (in order) of the transaction object",
            "type": "string",
            "pattern": "^0x[0-9a-f]+$"
          }
        }
      ],
      "result": {
        "name": "transaction hash",
        "schema": {
          "title": "transactionHash",
          "summary": "hash of a transaction",
          "type": "string",
          "pattern": "^0x[0-9a-f]{64}$"
        }
      }
    },
    {
      "name": "eth_sendTransaction",
      "summary": "Creates, signs, and sends a new transaction to the network",
      "params": [
        {
          "required": true,
          "name": "transaciton request object",
          "schema": {
            "title": "transaction request object",
            "type": "object",
            "properties": {
              "to": {
                "title": "to",
                "type": "string",
                "pattern": "^0x[0-9a-f]{40}$"
              },
              "from": {
                "title": "from",
                "description": "The transaction sender's address",
                "type": "string",
                "pattern": "^0x[0-9a-f]{40}$"
              },
              "gas": {
                "title": "gas",
                "name": "gas limit",
                "summary": "A scalar value equal to the current limit of gas expenditure per block",
                "type": "string",
                "pattern": "^0x[0-9a-f]{64}$"
              },
              "gasPrice": {
                "title": "gas price",
                "type": "string",
                "pattern": "^0x[0-9a-f]{64}$"
              },
              "value": {
                "title": "value",
                "type": "string",
                "pattern": "^0x[0-9a-f]{64}$"
              },
              "data": {
                "title": "hex encoded bytes",
                "type": "string",
                "pattern": "^0x[0-9a-f]+$"
              },
              "nonce": {
                "title": "proof of work nonce",
                "summary": "A 32-byte value which, combined with the mix-hash, proves that a sufficient amount of computation has been carried out on this block",
                "type": "string",
                "pattern": "^0x[0-9a-f]{64}$"
              }
            }
          }
        }
      ],
      "result": {
        "summary": "transaction hash, or the zero hash if the transaction is not yet available",
        "name": "hash or zero hash",
        "schema": {
          "title": "hash or zero hash",
          "oneOf": [
            {
              "title": "transactionHash",
              "summary": "hash of a transaction",
              "type": "string",
              "pattern": "^0x[0-9a-f]{64}$"
            },
            { "title": "zero hash", "type": "string", "pattern": "^0x$" }
          ]
        }
      }
    },
    {
      "name": "eth_sign",
      "summary": "Calculates an Ethereum-specific signature in the form of keccak256('\\x19Ethereum Signed Message:\n' + len(message) + message))",
      "params": [
        {
          "name": "address",
          "schema": {
            "title": "address",
            "type": "string",
            "pattern": "^0x[0-9a-f]{40}$"
          },
          "required": true,
          "summary": "address to use for signing"
        },
        {
          "required": true,
          "name": "data",
          "summary": "data to sign",
          "schema": {
            "title": "hex encoded bytes",
            "type": "string",
            "pattern": "^0x[0-9a-f]+$"
          }
        }
      ],
      "result": {
        "name": "hash",
        "summary": "signature hash of the provided data",
        "schema": {
          "title": "32 byte hex string",
          "type": "string",
          "pattern": "^0x[0-9a-f]{64}$"
        }
      }
    },
    {
      "name": "eth_signTransaction",
      "summary": "Signs a transaction that can be submitted to the network at a later time using with eth_sendRawTransaction",
      "params": [
        {
          "name": "transaction to be signed",
          "required": true,
          "schema": {
            "title": "transaction request object",
            "type": "object",
            "properties": {
              "to": {
                "title": "to",
                "type": "string",
                "pattern": "^0x[0-9a-f]{40}$"
              },
              "from": {
                "title": "from",
                "description": "The transaction sender's address",
                "type": "string",
                "pattern": "^0x[0-9a-f]{40}$"
              },
              "gas": {
                "title": "gas",
                "name": "gas limit",
                "summary": "A scalar value equal to the current limit of gas expenditure per block",
                "type": "string",
                "pattern": "^0x[0-9a-f]{64}$"
              },
              "gasPrice": {
                "title": "gas price",
                "type": "string",
                "pattern": "^0x[0-9a-f]{64}$"
              },
              "value": {
                "title": "value",
                "type": "string",
                "pattern": "^0x[0-9a-f]{64}$"
              },
              "data": {
                "title": "hex encoded bytes",
                "type": "string",
                "pattern": "^0x[0-9a-f]+$"
              },
              "nonce": {
                "title": "proof of work nonce",
                "summary": "A 32-byte value which, combined with the mix-hash, proves that a sufficient amount of computation has been carried out on this block",
                "type": "string",
                "pattern": "^0x[0-9a-f]{64}$"
              }
            }
          }
        }
      ],
      "result": {
        "summary": "signature hash of the transaction object",
        "name": "32 byte hash",
        "schema": {
          "title": "32 byte hex string",
          "type": "string",
          "pattern": "^0x[0-9a-f]{64}$"
        }
      }
    },
    {
      "name": "eth_submitHashrate",
      "summary": "Submit a mining hashrate",
      "params": [
        {
          "name": "hashrate",
          "summary": "number of hashes-per-second this node is mining at",
          "schema": {
            "title": "hex encoded unsigned integer",
            "type": "string",
            "pattern": "^0x[0-9a-f]{64}$"
          },
          "required": true
        },
        {
          "required": true,
          "name": "random id",
          "summary": "random ID identifying this node",
          "schema": {
            "title": "hex encoded bytes",
            "type": "string",
            "pattern": "^0x[0-9a-f]+$"
          }
        }
      ],
      "result": {
        "name": "status",
        "summary": "true if the operation was successful, false if it was not",
        "schema": { "title": "success", "type": "boolean" }
      }
    },
    {
      "name": "eth_submitWork",
      "summary": "Submit a proof-of-work solution",
      "params": [
        {
          "name": "proof of work nonce found",
          "schema": {
            "title": "proof of work nonce",
            "summary": "A 32-byte value which, combined with the mix-hash, proves that a sufficient amount of computation has been carried out on this block",
            "type": "string",
            "pattern": "^0x[0-9a-f]{64}$"
          }
        },
        {
          "required": true,
          "name": "block proof of work hash",
          "schema": {
            "title": "proof of work hash",
            "summary": "The proof of work hash of the specified block; this can be found via the Nonce and MixHash",
            "type": "string",
            "pattern": "^0x[0-9a-f]{64}$"
          }
        },
        {
          "required": true,
          "name": "proof of work mix hash",
          "schema": {
            "title": "mix hash",
            "summary": "A 32-byte hash which, combined with the nonce, proves that a sufficient amount of computation has been carried out on this block",
            "type": "string",
            "pattern": "^0x[0-9a-f]{64}$"
          }
        }
      ],
      "result": {
        "name": "is solution valid",
        "summary": "true if the solution is valid, false otherwise",
        "schema": { "type": "boolean" }
      }
    },
    {
      "name": "eth_syncing",
      "summary": "Returns information about the status of this client's network synchronization",
      "params": [],
      "result": {
        "name": "false or progres object",
        "schema": {
          "title": "false or syncing progress object",
          "summary": "false if this client is not syncing with the network, otherwise a syncing progres object",
          "oneOf": [
            {
              "title": "not syncing",
              "description": "Should always return false if not syncing.",
              "type": "boolean"
            },
            {
              "title": "syncing progress",
              "type": "object",
              "properties": {
                "startingBlock": {
                  "title": "starting block",
                  "summary": "block number at which syncing started",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]{64}$"
                },
                "currentBlock": {
                  "title": "current block",
                  "summary": "number of the most-recent block synced",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]{64}$"
                },
                "highestBlock": {
                  "title": "highest block",
                  "summary": "number of latest block on the network",
                  "type": "string",
                  "pattern": "^0x[0-9a-f]{64}$"
                }
              }
            }
          ]
        }
      }
    },
    {
      "name": "eth_uninstallFilter",
      "summary": "Destroys a filter based on filter ID;  This should only be called if a filter and its notifications are no longer needed. This will also be called automatically on a filter if its notifications are not retrieved using eth_getFilterChanges for a period of time.",
      "params": [
        {
          "required": true,
          "name": "filter id to destroy",
          "schema": {
            "title": "filter id to destroy",
            "summary": "ID of the filter to destroy",
            "name": "Filter Identifier",
            "type": "string",
            "pattern": "^0x[0-9a-f]{64}$"
          }
        }
      ],
      "result": {
        "name": "is filter destroyed",
        "schema": {
          "title": "is filter destroyed",
          "summary": "true if the filter is found and successfully destroyed or false if it is not",
          "type": "boolean"
        }
      }
    },
    {
      "name": "net_listening",
      "summary": "Determines if this client is listening for new network connections",
      "params": [],
      "result": {
        "name": "is listening",
        "summary": "true if listening is active or false if listening is not active",
        "schema": { "type": "boolean" }
      }
    },
    {
      "name": "net_peerCount",
      "summary": "Returns the number of peers currently connected to this client",
      "params": [],
      "result": {
        "name": "connected peers",
        "summary": "number of connected peers",
        "schema": {
          "title": "hex encoded unsigned integer",
          "type": "string",
          "pattern": "^0x[0-9a-f]{64}$"
        }
      }
    },
    {
      "name": "net_version",
      "summary": "Returns the chain ID associated with the current network",
      "params": [],
      "result": {
        "name": "chain id",
        "summary": "chain ID associated with the current network",
        "description": "Common chain IDs:  '1' - Ethereum mainnet  '3' - Ropsten testnet  '4' - Rinkeby testnet  '42' - Kovan testnet  Note: See EIP-155 for a [complete list](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-155.md#list-of-chain-ids) of possible chain IDs.",
        "schema": { "type": "string" }
      }
    },
    {
      "name": "web3_clientVersion",
      "summary": "Returns the version of the current client",
      "params": [],
      "result": { "name": "client version", "schema": { "type": "string" } }
    },
    {
      "name": "web3_sha3",
      "summary": "Hashes data using the Keccak-256 algorithm",
      "params": [
        {
          "name": "data to be hashed",
          "required": true,
          "schema": {
            "title": "hex encoded bytes",
            "type": "string",
            "pattern": "^0x[0-9a-f]+$"
          }
        }
      ],
      "result": {
        "name": "hashed data",
        "summary": "Keccak-256 hash of the given data",
        "schema": {
          "title": "32 byte hex string",
          "type": "string",
          "pattern": "^0x[0-9a-f]{64}$"
        }
      }
    }
  ]
}
